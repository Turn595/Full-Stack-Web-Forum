{"remainingRequest":"C:\\Users\\Andrew\\Saskpolytech\\CWEB-FinalProject\\cweb.2020.f09\\vue-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Andrew\\Saskpolytech\\CWEB-FinalProject\\cweb.2020.f09\\vue-ui\\src\\components\\commentSection.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Andrew\\Saskpolytech\\CWEB-FinalProject\\cweb.2020.f09\\vue-ui\\src\\components\\commentSection.vue","mtime":1618004406989},{"path":"C:\\Users\\Andrew\\Saskpolytech\\CWEB-FinalProject\\cweb.2020.f09\\vue-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Andrew\\Saskpolytech\\CWEB-FinalProject\\cweb.2020.f09\\vue-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Andrew\\Saskpolytech\\CWEB-FinalProject\\cweb.2020.f09\\vue-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Andrew\\Saskpolytech\\CWEB-FinalProject\\cweb.2020.f09\\vue-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgR2xvYmFsTWl4aW4gZnJvbSAiQC9taXhpbnMvZ2xvYmFsLW1peGluIjsKaW1wb3J0IGNvbW1lbnQgZnJvbSAiQC9jb21wb25lbnRzL2NvbW1lbnQiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJjb21tZW50U2VjdGlvbiIsCiAgbWl4aW5zOltHbG9iYWxNaXhpbl0sCiAgY29tcG9uZW50czp7CiAgICB1c2VyQ29tbWVudDogY29tbWVudAogIH0sCiAgcHJvcHM6ewogICAgYXJ0SUQ6IFN0cmluZwogIH0sCiAgZGF0YSgpewogICAgcmV0dXJuewogICAgICBjb21tZW50QXJyYXk6IFtdLAogICAgICBodG1sOiAiIiwKICAgICAgbmV3Q29tbWVudDogewogICAgICAgIGFsaWFzOiAnJywKICAgICAgICBib2R5OiAnJywKICAgICAgICBhcnRJRDogdGhpcy5hcnRJRCwKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgdG9rZW46ICcnCiAgICAgIH0sCiAgICB9CiAgfSwKICBtZXRob2RzOnsKICAgIGdlbkNvbW1lbnRzKCl7CiAgICAgIHRoaXMuY2FsbEFQSSh0aGlzLkNPTU1FTlRfVVJMLCdnZXQnLCB7J2FydGljbGVpZCc6dGhpcy5hcnRJRH0pCiAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgIHRoaXMuY29tbWVudEFycmF5ID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goZXJyb3JzID0+IHsKICAgICAgICAgICAgZXJyb3JzOwogICAgICAgICAgfSkuZmluYWxseSgoKSA9PiB7CgogICAgICAgIHRoaXMubmV3Q29tbWVudC5ib2R5ID0gJyc7CiAgICAgICAgICB9KTsKICAgIH0sCiAgICBwb3N0Q29tbWVudCgpewogICAgICB0aGlzLm5ld0NvbW1lbnQudXNlcm5hbWUgPSB0aGlzLmdldENvb2tpZSgndXNlcm5hbWUnKTsKICAgICAgdGhpcy5uZXdDb21tZW50LnRva2VuID0gdGhpcy5nZXRDb29raWUoJ3Rva2VuJyk7CiAgICAgIGlmICghdGhpcy5zdWJtaXRTdGF0ZSkgewogICAgICAgIHRoaXMubmV3Q29tbWVudFsnYXJ0aWNsZWlkJ10gPSB0aGlzLmFydElEOwogICAgICAgIHRoaXMuY2FsbEFQSSh0aGlzLkNPTU1FTlRfVVJMLCAncG9zdCcsIHRoaXMubmV3Q29tbWVudCkKICAgICAgICAgICAgLmZpbmFsbHkoKCkgPT4gewogICAgICAgICAgICAgIHRoaXMuZ2VuQ29tbWVudHMoKTsKCiAgICAgICAgICAgIH0pOwogICAgICB9CiAgICB9LAogIH0sCiAgY29tcHV0ZWQ6ewogICAgYm9keVN0YXRlKCkgewogICAgICByZXR1cm4gdGhpcy5uZXdDb21tZW50LmJvZHkgPT09ICcnID8gbnVsbCA6IHRoaXMubmV3Q29tbWVudC5ib2R5Lmxlbmd0aCA+IDcgPwogICAgICAgICAgdGhpcy5uZXdDb21tZW50LmJvZHkubGVuZ3RoIDwgMjAwOiBmYWxzZTsKICAgIH0sCiAgICBzdWJtaXRTdGF0ZSgpIHsKICAgICAgcmV0dXJuICEodGhpcy5ib2R5U3RhdGUpOwogICAgfSwKICAgIGxvZ2dlZEluKCl7CiAgICAgIHJldHVybiAhICh0aGlzLmdldENvb2tpZSgndXNlcm5hbWUnKSA9PT0gIiIpOwogICAgfQogIH0sCiAgd2F0Y2g6ewogICAgYXJ0SUQ6ewogICAgICBoYW5kbGVyKG5ld0FydCwgb2xkQXJ0KXsKICAgICAgICBpZiAobmV3QXJ0ICE9PSBvbGRBcnQgfHwgbmV3QXJ0ICE9PSAtMSl7CiAgICAgICAgICB0aGlzLmdlbkNvbW1lbnRzKCk7CiAgICAgICAgfQogICAgICAgIHRoaXMuZXJyb3IgPSB7fTsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["commentSection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"commentSection.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"flex-column row my-3\">\n\n\n    <h1>Comments: </h1>\n\n    <div class=\" col-12\" v-show=\"loggedIn\">\n\n      <b-form-group label=\"New Comment\" label-for=\"input-3\">\n        <b-form-textarea\n            v-model=\"newComment.body\"\n            required\n            placeholder=\"Comment...\"\n            class=\"form-control-lg\"\n            :state=\"bodyState\"\n        ></b-form-textarea>\n        <b-form-invalid-feedback id=\"input-live-feedback\">\n          Your comment must be 8 - 200 characters.\n        </b-form-invalid-feedback>\n      </b-form-group>\n\n      <b-form-group label-for=\"input-3\">\n        <b-button class=\"m-2\" @click=\"postComment\" variant=\"success\" :disabled=\"submitState\">Post Comment</b-button>\n      </b-form-group>\n\n\n    </div>\n\n\n    <div class=\"flex-row col-12 d-flex p-0 m-0\">\n      <div class=\"flex-column col-12 p-0 m-0\">\n        <div v-for=\"com in commentArray\" :key=\"com.id\" v-show=\"commentArray.length !== 0\">\n          <userComment :com=\"com\" class=\"my-4\"/>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport GlobalMixin from \"@/mixins/global-mixin\";\nimport comment from \"@/components/comment\";\n\nexport default {\n  name: \"commentSection\",\n  mixins:[GlobalMixin],\n  components:{\n    userComment: comment\n  },\n  props:{\n    artID: String\n  },\n  data(){\n    return{\n      commentArray: [],\n      html: \"\",\n      newComment: {\n        alias: '',\n        body: '',\n        artID: this.artID,\n        username: '',\n        token: ''\n      },\n    }\n  },\n  methods:{\n    genComments(){\n      this.callAPI(this.COMMENT_URL,'get', {'articleid':this.artID})\n          .then(response => {\n            this.commentArray = response.data;\n          })\n          .catch(errors => {\n            errors;\n          }).finally(() => {\n\n        this.newComment.body = '';\n          });\n    },\n    postComment(){\n      this.newComment.username = this.getCookie('username');\n      this.newComment.token = this.getCookie('token');\n      if (!this.submitState) {\n        this.newComment['articleid'] = this.artID;\n        this.callAPI(this.COMMENT_URL, 'post', this.newComment)\n            .finally(() => {\n              this.genComments();\n\n            });\n      }\n    },\n  },\n  computed:{\n    bodyState() {\n      return this.newComment.body === '' ? null : this.newComment.body.length > 7 ?\n          this.newComment.body.length < 200: false;\n    },\n    submitState() {\n      return !(this.bodyState);\n    },\n    loggedIn(){\n      return ! (this.getCookie('username') === \"\");\n    }\n  },\n  watch:{\n    artID:{\n      handler(newArt, oldArt){\n        if (newArt !== oldArt || newArt !== -1){\n          this.genComments();\n        }\n        this.error = {};\n      }\n    }\n  }\n}\n</script>\n"]}]}